export type Lang = 'zh' | 'en'

export interface BridgeVersion {
    versionName: string;
    versionCode: number;
}

export interface AppInfo {
    "platform": "ios" | "android";
    "versionName": string;
    "versionCode": number,
    "env": "test" | "production"
}

export interface SetWebTitleInput {
    title: string;
}

export interface ShareLinkInput {
    url: string;
}

interface RRButtonTextInput {
    /**
     * title should not more than 4 chars.
     */
    title: string;
}

interface RRButtonImgInput {
    /**
     * img should be 56px*56px, base64 data URL
     */
    img: string;
}

export type SetRRButtonInput = RRButtonTextInput | RRButtonImgInput

export interface SendTxInput {
    /**
     * uri should be a [Vite URI](https://vite.wiki/vep/vep-6.html)
     * can be generated by [@vite/vitejs](https://vite.wiki/api/vitejs/tool/utils.html#uristringify)
     */
    uri: string;
    /**
     * address is the sender address, usually is the current wallet address
     */
    address: string;
}

export interface EncryptOutput {
    base64: string;
}

export interface VitexInviteCode {
    code: string;
}

export interface ScanOutput {
    text: string;
}

export interface OpenInput {
    url: string;
}

export interface TokenId {
    tokenId: string;
}

export interface PriSendTxInput {
    block: {
        data?: string;
        /**
         * in VITE unit, default is '0
         */
        amount?: string;
        /**
         * default is VITE tti
         */
        tokenId?: string;
        toAddress: string;
        /**
         * in VITE unit, default is '0'
         */
        fee?: string;
    }
}

export interface SendTxOutput {
    height: string;
    hash: string;
    prevHash: string;
    blockType: number;
    tokenId: string;
    amount: string;
    toAddress: string;
    accountAddress: string;
    fee: string;
    difficulty: string;
    nonce: string;
    publicKey: string;
    signature: string;
}

export interface Pair {
    symbol: string;
}
